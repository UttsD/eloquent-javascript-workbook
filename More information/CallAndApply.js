// в JS метод call() позволяет вызывать (выполнять) функцию как метод объекта, устанавливая ее контекст исполнения (this) в указанное значение, передавая при этом необходимые аргументы
// метод apply() (переводится как Применять) делает то же самое, только аргументы передаются в виде массива или массивоподобного объекта

// Для примера задача: найти максимальное и минимальное значение из элементов массива

let array = [0, 3, 5, 7, 1, 2, 3, 4, 1]

let biggest = function(array) {
    return Math.max.apply(Math, array);
}

let smallest = function(array){
    return Math.min.apply(Math, array);
}

console.log(biggest(array) + " " + smallest(array));



// таким образом мы изменили контекст исполнения функции Math на наш массив array

//Контекст обозначает на какой объект ссылается оператор this внутри функции в которой он был вызван

var map = Object.create(null);
var x = {
    prop: 1
}

var ex = function () {
    console.log(this); 
}


ex(); //здесь получаем глобальный объект (прототип)
ex.apply(x); //здесь меняем контекст исполнения функции ex на объект x


// Пример с call():


